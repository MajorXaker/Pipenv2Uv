name: Test & Build & Package

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    tags:
      # Regex for a version number such as 0.2.1
      - "[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch: # Added manual trigger
    inputs:
      version:
        description: 'Version number (e.g., 1.2.3)'
        required: true
      force-build:
        description: 'Force rebuild even if version exists'
        required: false
        default: false

jobs:
  build-and-upload:
    name: Build and Upload Release
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      actions: read
      checks: write
    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
          - build: macos-arm
            os: macos-latest
            target: aarch64-apple-darwin
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        # Arguments to pass in
        with:
          # Make Rust compile to our target (defined in the matrix)
          targets: ${{ matrix.target }}

      - name: Set version
        shell: bash
        run: |
          if [ -n "${GITHUB_REF}" ] && [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=${VERSION}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          binary_name="Pipenv2Uv"

          dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          fi

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - name: Upload the binaries
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET }}

